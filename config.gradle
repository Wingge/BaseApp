
project.ext {
    version_code = 1
    version_name = '0.0.1'
    //Sdk and tools
    minSdkVersion = 14
    compileSdkVersion = 23
    targetSdkVersion = 23
    buildToolsVersion = '24.0.0'

    abortOnLintError = false
    checkLintRelease = false
    useJack = false
    abortOnLintError = false

    javaVersion = JavaVersion.VERSION_1_8

    //App dependencies
    supportLibraryVersion = '23.2.1'
    GooglePlayServicesClientLibraryVersion = '9.0.0'
    guavaVersion = '18.0'
    daggerVersion = "2.2"
    retrofitVersion = "2.0.2"
//    retrofitVersion = "2.0.0-beta4"
    rxBindingVersion = '0.4.0'
    leakCanaryVersion = "1.4-beta2"
    blockCanaryVersion = '1.2.1'
    mockitoVersion = '1.10.19'
    powerMockito = '1.6.2'
    hamcrestVersion = '1.3'
    runnerVersion = '0.4.1'
    rulesVersion = '0.4.1'
    espressoVersion = '2.2.1'
    butterknifeVersion = '8.1.0'

    //libs
    libJunit = 'junit:junit:4.12'
    libMultidex='com.android.support:multidex:1.0.0'
    //app support libs
    libSupportAppcompat = "com.android.support:appcompat-v7:${supportLibraryVersion}"
    libSupportDesign = "com.android.support:design:${supportLibraryVersion}"
    libSupportRecyclerview = "com.android.support:recyclerview-v7:${supportLibraryVersion}"
    libSupportV4 = "com.android.support:support-v4:${supportLibraryVersion}"
    //play service基础包
    libPlayServiceBasement = "com.google.android.gms:play-services-basement:${GooglePlayServicesClientLibraryVersion}"
    //android tv支持包
    libLeanbackSupportV4 = "com.android.support:leanback-v17:${supportLibraryVersion}"

    libRxAndroid = "io.reactivex:rxandroid:1.2.0"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    libRxJava = "io.reactivex:rxjava:1.1.5"
    libEventBus = "org.greenrobot:eventbus:3.0.0"
    //注解
    libJavaxAnnotation = "javax.annotation:jsr250-api:1.0"

    libGson = "com.google.code.gson:gson:2.4"
    // Retrofit网络处理
    libRetrofit = "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    // Retrofit的gson库
    libRetrofitConverterGson = "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    // Retrofit的rx解析库
    libRetrofitAdapterRxJava = "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}"
    libOkHttpLoggingInterceptor = "com.squareup.okhttp3:logging-interceptor:3.0.0-RC1"

    //标注
    libButterknife = "com.jakewharton:butterknife:${butterknifeVersion}"
    libButterknifeCompiler = "com.jakewharton:butterknife-compiler:${butterknifeVersion}"
    //依赖注入框架
    libDagger = "com.google.dagger:dagger:${daggerVersion}"
    libDaggerCompiler = "com.google.dagger:dagger-compiler:${daggerVersion}"
    //图片加载库
    libGlide = "com.github.bumptech.glide:glide:3.7.0"
    //google 官方databinding
    libRxBinding = "com.jakewharton.rxbinding:rxbinding:${rxBindingVersion}"
    libRxBindingSupportV4 = "com.jakewharton.rxbinding:rxbinding-support-v4:${rxBindingVersion}"
    libRxBindingAppcompatV7 = "com.jakewharton.rxbinding:rxbinding-appcompat-v7:${rxBindingVersion}"
    libRxBindingDesign = "com.jakewharton.rxbinding:rxbinding-design:${rxBindingVersion}"
    libRxBindingRecyclerview = "com.jakewharton.rxbinding:rxbinding-recyclerview-v7:${rxBindingVersion}"
    //orm
    libRealm = "io.realm:realm-android:0.87.5"

    debugDependencies = [

            leakCanary: "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}",
            //BlockCanary是一个Android平台的一个非侵入式的性能监控组件,从leakCanary(上面)改进而来
            blockCanary: "com.github.moduth:blockcanary-android:${blockCanaryVersion}",
    ]

    releaseDependencies = [
            leakCanary: "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}",
            blockCanary: "com.github.moduth:blockcanary-no-op:${blockCanaryVersion}",
    ]


    ///////////////////////////////////////////////////////////////////////////////
    // Prod/Staging/Test/Dev Environment Variables.
    ///////////////////////////////////////////////////////////////////////////////
    // API manifest URLs. These URLs provide the data files to load to download data for the app.
    // When data needs to change the underlying data file is published as a new revision and the manifest
    // is updated with the new file name.
    staging_api_manifest_endpoint = 'http://storage.googleapis.com/io2015-data.appspot.com/manifest_v1.json'
    production_api_manifest_endpoint = 'http://storage.googleapis.com/io2015-data.appspot.com/manifest_v1.json'

    // GCM server endpoints to checkin with.
    staging_gcm_server_endpoint = 'https://io2015-data.appspot.com/gcm'
    production_gcm_server_endpoint = 'https://io2015-data.appspot.com/gcm'

    // Website hostname
    staging_website_host_name = 'googleio-staging.appspot.com'
    production_website_host_name = 'events.google.com'
    test_website_host_name = 'events.google.com'
    debug_website_host_name = 'events.google.com'

    //API key for GCM
    // TODO: Supply GCM API key and sender ID for your project
    gcm_api_key = 'UNDEFINED'
    gcm_sender_id = 'UNDEFINED'

    // Used for generic API method calls to Google services, including Maps.
    // TODO: Supply Google API key and sender ID for your project
    oauth2_creds_api_key = 'UNDEFINED'

    metadata_url = 'http://url-caster.appspot.com/resolve-scan'

    // Feedback API
    // TODO: Supply Feedback API endpoint and implement FeedbackApiHelper
    feedback_api_endpoint = 'UNDEFINED'
}